{"version":3,"sources":["Components/App/App.styled.js","Components/Signin/Signin.styled.js","Components/Signin/Signin.js","Components/Alert/Alert.styled.js","Components/Alert/Alert.js","Components/Contact/Contact.styled.js","Components/App/App.js","Components/Contact/Contact.js","reportWebVitals.js","index.js"],"names":["StyledApp","styled","div","StyledSignin","StyledForm","form","StyledInput","input","StyledButton","button","Signin","signin","setUsername","setPassword","onSubmit","e","placeholder","type","onChange","target","value","StyledAlert","StyledBody","StyledMessage","p","StyledExit","Alert","message","setAlert","onClick","ios","chatroom","StyledContact","StyledSingleContact","StyledName","StyledStatus","Contact","onlineUsers","map","user","username","App","useState","password","isOnline","setIsOnline","userId","setUserId","alert","alertMessage","setAlertMessage","setOnlineUsers","useEffect","io","on","res","preventDefault","ids","emit","status","user_id","id","signout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c08bffa.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledApp = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  color: yellowgreen;\n`;","import styled from 'styled-components';\n\nexport const StyledSignin = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledForm = styled.form`\n  width: 25%;\n  height: 25%;\n  border: 3px solid yellowgreen;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledInput = styled.input`\n  border: 2px solid yellowgreen;\n  width: 80%;\n  height: 10%;\n  background: transparent;\n  margin: auto;\n  color: yellowgreen;\n  font-weight: 800;\n\n  ::placeholder {\n    color: yellowgreen\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 50%;\n  height: 10%;\n  margin: auto;\n  color: yellowgreen;\n  background-color: transparent;\n  border: 2px solid yellowgreen;\n  font-weight: 700;\n\n  :focus {\n    background-color: yellowgreen;\n    color: white;\n    border: none;\n  }\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledButton, StyledForm, StyledInput, StyledSignin } from './Signin.styled';\n\nconst Signin = ({ signin, setUsername, setPassword }) => {\n  return (\n    <StyledSignin>\n      <StyledForm onSubmit={e => signin(e)}>\n        <StyledInput placeholder=\"Username\" type=\"text\" onChange={e => setUsername(e.target.value)} />\n        <StyledInput placeholder=\"Password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\n        <StyledButton type=\"submit\">ACCESS</StyledButton>\n      </StyledForm>\n    </StyledSignin>\n  );\n};\n\nexport default Signin;","import styled from 'styled-components';\n\nexport const StyledAlert = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  left: 0;\n  top: 0;\n  background-color: rgba(0,0,0, .9);\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledBody = styled.div`\n  width: 35%;\n  height: 20%;\n  border: 1px solid yellowgreen;\n`;\n\nexport const StyledMessage = styled.p`\n  height: 100%;\n  width: 100%;\n  font-size: 2em;\n  color: yellowgreen;\n  font-weight: 800;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  position: relative;\n`;\n\nexport const StyledExit = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 16px;\n  height: 16px;\n  background-color: white;\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledAlert, StyledBody, StyledMessage, StyledExit } from './Alert.styled';\n\nconst Alert = ({ message, setAlert }) => {\n  const closeAlert = () => {\n    setAlert(false);\n  }\n  return (\n    <StyledAlert>\n      <StyledBody>\n        <StyledMessage>\n          <StyledExit onClick={closeAlert} />\n          {message}\n        </StyledMessage>\n      </StyledBody>\n    </StyledAlert>\n  );\n};\n\nexport default Alert;","import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 20%;\n  height: 35%;\n  display: flex;\n  flex-direction: column;\n  border: 2px solid yellowgreen;\n`;\n\nexport const StyledSingleContact = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const StyledName = styled.p`\n\n`;\n\nexport const StyledStatus = styled.div`\n  width: 12px;\n  height: 12px;\n  background-color: green;\n  border-radius: 50%;\n  margin-left: 1rem;\n  margin-right: 1rem;\n`;","import React, { useEffect, useState } from 'react';\n\n// IMPORT SOCKET.IO-CLIENT\nimport io from 'socket.io-client';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledApp } from './App.styled';\n\n// IMPORT COMPONENTS\nimport Signin from '../Signin/Signin';\nimport Alert from '../Alert/Alert';\nimport Contact from '../Contact/Contact';\n\n// SOCKETS\nlet ios;\nlet chatroom;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [alert, setAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState();\n\n  // MAIN NAMESPACE CONNEXION\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CHATROOM CONNEXION\n  useEffect(() => {\n    if(isOnline) {\n      chatroom = io('/chatroom');\n\n      chatroom.on('connect', () => {\n\n        chatroom.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n      });\n    };\n  }, [isOnline]);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = { username, password };\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setAlert(true);\n        setAlertMessage(res.message);\n        setUserId(res.user_id);\n      } else {\n        setAlert(true);\n        setAlertMessage(res.message);\n      }\n    });\n  };\n\n  const signout = (e) => {\n    e.preventDefault();\n    const id = userId;\n    chatroom.emit('signout', id, (res) => {\n      if(res.status === 200) {\n        setIsOnline(false);\n        setAlert(true);\n        setAlertMessage(res.message);\n        setUserId(\"\");\n      } else {\n        setAlert(true);\n        setAlertMessage(res.message);\n      }\n    })\n  };\n  \n  return (\n    <StyledApp>\n      {!isOnline && (\n        <Signin \n          signin={signin}\n          setUsername={setUsername}\n          setPassword={setPassword}\n        />\n      )}\n      {alert && (\n        <Alert\n          message={alertMessage}\n          setAlert={setAlert}\n        />\n      )}\n      <button onClick={e => signout(e)}>Signout</button>\n      <Contact onlineUsers={onlineUsers} />\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledContact, StyledSingleContact, StyledStatus, StyledName  } from './Contact.styled';\n\nconst Contact = ({ onlineUsers }) => {\n  return (\n    <StyledContact>\n      {onlineUsers && onlineUsers.map(user => (\n        <StyledSingleContact>\n          <StyledStatus />\n          <StyledName>{user.username}</StyledName>\n      </StyledSingleContact>\n      ))}\n    </StyledContact>\n  );\n};\n\nexport default Contact;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}