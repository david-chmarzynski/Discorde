{"version":3,"sources":["Components/App/App.styled.js","Components/Signin/Signin.styled.js","Components/Signin/Signin.js","Components/Alert/Alert.styled.js","Components/Alert/Alert.js","Components/Contact/Contact.styled.js","Components/App/App.js","Components/Contact/Contact.js","reportWebVitals.js","index.js"],"names":["StyledApp","styled","div","StyledButton","button","StyledSignin","StyledForm","form","StyledInput","input","Signin","signin","setUsername","setPassword","onSubmit","e","placeholder","type","onChange","target","value","StyledAlert","StyledBody","StyledMessage","p","StyledExit","Alert","message","setAlert","onClick","ios","chatroom","StyledContact","StyledSingleContact","StyledName","StyledStatus","StyledShortcut","Contact","onlineUsers","useState","isDeployed","setIsDeployed","handleDeployContact","map","user","username","App","password","isOnline","setIsOnline","userId","setUserId","alert","alertMessage","setAlertMessage","setOnlineUsers","useEffect","io","on","res","preventDefault","ids","emit","status","user_id","id","signout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc99578f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledApp = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  color: yellowgreen;\n`;\n\nexport const StyledButton = styled.button`\n  border: none;\n  background-color: yellowgreen;\n`;","import styled from 'styled-components';\n\nexport const StyledSignin = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledForm = styled.form`\n  width: 25%;\n  height: 25%;\n  border: 3px solid yellowgreen;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledInput = styled.input`\n  border: 2px solid yellowgreen;\n  width: 80%;\n  height: 10%;\n  background: transparent;\n  margin: auto;\n  color: yellowgreen;\n  font-weight: 800;\n\n  ::placeholder {\n    color: yellowgreen\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 50%;\n  height: 10%;\n  margin: auto;\n  color: yellowgreen;\n  background-color: transparent;\n  border: 2px solid yellowgreen;\n  font-weight: 700;\n\n  :focus {\n    background-color: yellowgreen;\n    color: white;\n    border: none;\n  }\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledButton, StyledForm, StyledInput, StyledSignin } from './Signin.styled';\n\nconst Signin = ({ signin, setUsername, setPassword }) => {\n  return (\n    <StyledSignin>\n      <StyledForm onSubmit={e => signin(e)}>\n        <StyledInput placeholder=\"Username\" type=\"text\" onChange={e => setUsername(e.target.value)} />\n        <StyledInput placeholder=\"Password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\n        <StyledButton type=\"submit\">ACCESS</StyledButton>\n      </StyledForm>\n    </StyledSignin>\n  );\n};\n\nexport default Signin;","import styled from 'styled-components';\n\nexport const StyledAlert = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  left: 0;\n  top: 0;\n  background-color: rgba(0,0,0, .9);\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledBody = styled.div`\n  width: 35%;\n  height: 20%;\n  border: 1px solid yellowgreen;\n`;\n\nexport const StyledMessage = styled.p`\n  height: 100%;\n  width: 100%;\n  font-size: 2em;\n  color: yellowgreen;\n  font-weight: 800;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  position: relative;\n`;\n\nexport const StyledExit = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 16px;\n  height: 16px;\n  background-color: white;\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledAlert, StyledBody, StyledMessage, StyledExit } from './Alert.styled';\n\nconst Alert = ({ message, setAlert }) => {\n  const closeAlert = () => {\n    setAlert(false);\n  }\n  return (\n    <StyledAlert>\n      <StyledBody>\n        <StyledMessage>\n          <StyledExit onClick={closeAlert} />\n          {message}\n        </StyledMessage>\n      </StyledBody>\n    </StyledAlert>\n  );\n};\n\nexport default Alert;","import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 20%;\n  height: 35%;\n  display: flex;\n  flex-direction: column;\n  border: 2px solid yellowgreen;\n  border-top: 8px solid yellowgreen;\n`;\n\nexport const StyledSingleContact = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const StyledName = styled.p`\n\n`;\n\nexport const StyledStatus = styled.div`\n  width: 12px;\n  height: 12px;\n  background-color: green;\n  border-radius: 50%;\n  margin-left: 1rem;\n  margin-right: 1rem;\n`;\n\nexport const StyledShortcut = styled.div`\n  background-color: yellowgreen;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n`;","import React, { useEffect, useState } from 'react';\n\n// IMPORT SOCKET.IO-CLIENT\nimport io from 'socket.io-client';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledApp, StyledButton } from './App.styled';\n\n// IMPORT COMPONENTS\nimport Signin from '../Signin/Signin';\nimport Alert from '../Alert/Alert';\nimport Contact from '../Contact/Contact';\n\n// SOCKETS\nlet ios;\nlet chatroom;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [alert, setAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState();\n\n  // MAIN NAMESPACE CONNEXION\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CHATROOM CONNEXION\n  useEffect(() => {\n    if(isOnline) {\n      chatroom = io('/chatroom');\n\n      chatroom.on('connect', () => {\n\n        chatroom.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n      });\n    };\n  }, [isOnline]);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = { username, password };\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setAlert(true);\n        setAlertMessage(res.message);\n        setUserId(res.user_id);\n      } else {\n        setAlert(true);\n        setAlertMessage(res.message);\n      }\n    });\n  };\n\n  const signout = (e) => {\n    e.preventDefault();\n    const id = userId;\n    chatroom.emit('signout', id, (res) => {\n      if(res.status === 200) {\n        setIsOnline(false);\n        setAlert(true);\n        setAlertMessage(res.message);\n        setUserId(\"\");\n      } else {\n        setAlert(true);\n        setAlertMessage(res.message);\n      }\n    })\n  };\n  \n  return (\n    <StyledApp>\n      {!isOnline && (\n        <Signin \n          signin={signin}\n          setUsername={setUsername}\n          setPassword={setPassword}\n        />\n      )}\n      {alert && (\n        <Alert\n          message={alertMessage}\n          setAlert={setAlert}\n        />\n      )}\n      {isOnline && (\n        <>\n        <StyledButton onClick={e => signout(e)}>Signout</StyledButton>\n        <Contact onlineUsers={onlineUsers} />\n        </>\n      )}\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledContact, StyledSingleContact, StyledStatus, StyledName, StyledShortcut  } from './Contact.styled';\n\nconst Contact = ({ onlineUsers }) => {\n  const [isDeployed, setIsDeployed] = useState(false);\n\n  const handleDeployContact = () => {\n    setIsDeployed(!isDeployed);\n  };\n  return (\n    <>\n    {isDeployed && (\n      <StyledContact onClick={handleDeployContact}>\n        {onlineUsers && onlineUsers.map(user => (\n          <StyledSingleContact>\n            <StyledStatus />\n            <StyledName>{user.username}</StyledName>\n        </StyledSingleContact>\n        ))}\n      </StyledContact>\n    )}\n    {!isDeployed && (\n      <StyledShortcut onClick={handleDeployContact} />\n    )}\n    \n    </>\n  );\n};\n\nexport default Contact;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}