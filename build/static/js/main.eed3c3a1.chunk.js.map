{"version":3,"sources":["Components/App/App.styled.js","Components/Signin/Signin.styled.js","Components/Signin/Signin.js","Components/Alert/Alert.styled.js","Components/Alert/Alert.js","Components/Contact/Contact.styled.js","Components/Contact/Contact.js","Components/Room/Room.styled.js","Components/App/App.js","Components/Room/Room.js","reportWebVitals.js","index.js"],"names":["StyledApp","styled","div","StyledButton","button","StyledSignin","StyledForm","form","StyledInput","input","Signin","signin","setUsername","setPassword","onSubmit","e","placeholder","type","onChange","target","value","StyledAlert","StyledBody","StyledMessage","p","StyledExit","Alert","message","setAlert","onClick","StyledContact","StyledSingleContact","StyledStatus","StyledShortcut","Contact","onlineUsers","joinRoom","useState","isDeployed","setIsDeployed","handleDeployContact","map","user","id","_id","username","ios","chatroom","StyledRoom","StyledMessageArea","StyledMessageCurrent","StyledMessageStranger","StyledInputArea","StyledTextArea","textarea","StyledSendButton","Room","messages","userId","sendMessage","setMessage","roomId","ref","useRef","useEffect","console","log","current","scrollTo","behavior","top","document","getElementById","scrollHeight","room","author","data","name","cols","rows","wrap","onKeyPress","key","App","password","isOnline","setIsOnline","setUserId","alert","alertMessage","setAlertMessage","setOnlineUsers","setRoomId","setMessages","io","on","res","preventDefault","datas","emit","ids","status","user_id","signout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eed3c3a1.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledApp = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: black;\n  color: yellowgreen;\n`;\n\nexport const StyledButton = styled.button`\n  border: none;\n  background-color: yellowgreen;\n`;","import styled from 'styled-components';\n\nexport const StyledSignin = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledForm = styled.form`\n  width: 25%;\n  height: 25%;\n  border: 3px solid yellowgreen;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledInput = styled.input`\n  border: 2px solid yellowgreen;\n  width: 80%;\n  height: 10%;\n  background: transparent;\n  margin: auto;\n  color: yellowgreen;\n  font-weight: 800;\n\n  ::placeholder {\n    color: yellowgreen\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 50%;\n  height: 10%;\n  margin: auto;\n  color: yellowgreen;\n  background-color: transparent;\n  border: 2px solid yellowgreen;\n  font-weight: 700;\n\n  :focus {\n    background-color: yellowgreen;\n    color: white;\n    border: none;\n  }\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledButton, StyledForm, StyledInput, StyledSignin } from './Signin.styled';\n\nconst Signin = ({ signin, setUsername, setPassword }) => {\n  return (\n    <StyledSignin>\n      <StyledForm onSubmit={e => signin(e)}>\n        <StyledInput placeholder=\"Username\" type=\"text\" onChange={e => setUsername(e.target.value)} />\n        <StyledInput placeholder=\"Password\" type=\"password\" onChange={e => setPassword(e.target.value)} />\n        <StyledButton type=\"submit\">ACCESS</StyledButton>\n      </StyledForm>\n    </StyledSignin>\n  );\n};\n\nexport default Signin;","import styled from 'styled-components';\n\nexport const StyledAlert = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100vh;\n  left: 0;\n  top: 0;\n  background-color: rgba(0,0,0, .9);\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledBody = styled.div`\n  width: 35%;\n  height: 20%;\n  border: 1px solid yellowgreen;\n`;\n\nexport const StyledMessage = styled.p`\n  height: 100%;\n  width: 100%;\n  font-size: 2em;\n  color: yellowgreen;\n  font-weight: 800;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  position: relative;\n`;\n\nexport const StyledExit = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 16px;\n  height: 16px;\n  background-color: white;\n`;","import React from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledAlert, StyledBody, StyledMessage, StyledExit } from './Alert.styled';\n\nconst Alert = ({ message, setAlert }) => {\n  const closeAlert = () => {\n    setAlert(false);\n  }\n  return (\n    <StyledAlert>\n      <StyledBody>\n        <StyledMessage>\n          <StyledExit onClick={closeAlert} />\n          {message}\n        </StyledMessage>\n      </StyledBody>\n    </StyledAlert>\n  );\n};\n\nexport default Alert;","import styled from 'styled-components';\n\nexport const StyledContact = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 20%;\n  height: 35%;\n  display: flex;\n  flex-direction: column;\n  border: 2px solid yellowgreen;\n  border-top: 8px solid yellowgreen;\n`;\n\nexport const StyledSingleContact = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const StyledName = styled.p`\n\n`;\n\nexport const StyledStatus = styled.div`\n  width: 12px;\n  height: 12px;\n  background-color: green;\n  border-radius: 50%;\n  margin-left: 1rem;\n  margin-right: 1rem;\n`;\n\nexport const StyledShortcut = styled.div`\n  background-color: yellowgreen;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n`;","import React, { useState } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledContact, StyledSingleContact, StyledStatus, StyledName, StyledShortcut  } from './Contact.styled';\n\nconst Contact = ({ onlineUsers, joinRoom }) => {\n  const [isDeployed, setIsDeployed] = useState(false);\n\n  const handleDeployContact = () => {\n    setIsDeployed(!isDeployed);\n  };\n  return (\n    <>\n    {isDeployed && (\n      <StyledContact onClick={handleDeployContact}>\n        {onlineUsers && onlineUsers.map(user => (\n          <StyledSingleContact>\n            <StyledStatus />\n            <p id={user._id} onClick={e => joinRoom(e)}>{user.username}</p>\n        </StyledSingleContact>\n        ))}\n      </StyledContact>\n    )}\n    {!isDeployed && (\n      <StyledShortcut onClick={handleDeployContact} />\n    )}\n    \n    </>\n  );\n};\n\nexport default Contact;","import styled from 'styled-components';\n\nexport const StyledRoom = styled.div`\n  width: 50%;\n  height: 50%;\n  margin: auto;\n  border: 1px solid yellowgreen;\n  box-sizing: border-box;\n  border-radius: 0 0 24px 24px;\n\n  #scroller {\n    \n  }\n`;\n\nexport const StyledMessageArea = styled.div`\n  width: 100%;\n  height: 90%;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  ::-webkit-scrollbar { width: 0 !important }\n`;\n\nexport const StyledMessageCurrent = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    height: auto;\n    word-wrap: break-word;\n    margin: 1rem 1rem 1rem auto;\n    background-color: #0199ff;\n    padding: .8rem 1rem;\n    border-radius: 15px;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n  }\n`;\n\nexport const StyledMessageStranger = styled.div`\n  width: 100%;\n  max-height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    max-width: 45%;\n    height: auto;\n    word-wrap: break-word;\n    -webkit-hyphens: auto;\n    -moz-hyphens: auto;\n    -ms-hyphens: auto;\n    hyphens: auto;\n    color: white;\n    background-color: #3f4041;\n    padding: .8rem 1rem;\n    border-radius: 15px;\n    margin: 1em auto 1em 1em;\n  }\n`;\n\nexport const StyledInputArea = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    position: relative;\n    border-radius: 30px;\n    background-color: #2e3031;\n`;\n\nexport const StyledTextArea = styled.textarea`\n      width: 79%;\n      border: none;\n      color: #656667;\n      font-size: 1.2rem;\n      overflow: auto;\n      background-color: #2e3031;\n      padding: .8rem 0;\n      font-family: \"ubuntu\";\n      resize: none;\n      padding-right: 1rem;\n      ::-webkit-scrollbar {\n        display: none;\n      }\n\n      :focus {\n        outline: none;\n      }\n\n      ::placeholder {\n        color: #656667;\n        font-size: 1.2rem;\n      }\n`;\n\nexport const StyledSendButton = styled.button`\n  width: 9%;\n  height: 100%;\n`;","import React, { useEffect, useState } from 'react';\n\n// IMPORT SOCKET.IO-CLIENT\nimport io from 'socket.io-client';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledApp, StyledButton } from './App.styled';\n\n// IMPORT COMPONENTS\nimport Signin from '../Signin/Signin';\nimport Alert from '../Alert/Alert';\nimport Contact from '../Contact/Contact';\nimport Room from '../Room/Room';\n\n// SOCKETS\nlet ios;\nlet chatroom;\n\nconst App = () => {\n  // STATES\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isOnline, setIsOnline] = useState(false);\n  const [userId, setUserId] = useState('');\n  const [alert, setAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [onlineUsers, setOnlineUsers] = useState();\n  const [roomId, setRoomId] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  // MAIN NAMESPACE CONNEXION\n  useEffect(() => {\n    ios = io();\n  }, []);\n\n  // CHATROOM CONNEXION\n  useEffect(() => {\n    if(isOnline) {\n      chatroom = io('/chatroom');\n\n      chatroom.on('connect', () => {\n\n        chatroom.on('getUsers', (res) => {\n          setOnlineUsers(res);\n        });\n\n        chatroom.on('getMessages', (res) => {\n          setMessages(res);\n        });\n      });\n    };\n  }, [isOnline]);\n\n  const signin = (e) => {\n    e.preventDefault();\n    const ids = { username, password };\n    ios.emit('signin', ids, (res) => {\n      if(res.status === 200) {\n        setIsOnline(true);\n        setAlert(true);\n        setAlertMessage(res.message);\n        setUserId(res.user_id);\n      } else {\n        setAlert(true);\n        setAlertMessage(res.message);\n      }\n    });\n  };\n\n  const signout = (e) => {\n    e.preventDefault();\n    const id = userId;\n    chatroom.emit('signout', id, (res) => {\n      if(res.status === 200) {\n        setIsOnline(false);\n        setAlert(true);\n        setAlertMessage(res.message);\n        setUserId(\"\");\n      } else {\n        setAlert(true);\n        setAlertMessage(res.message);\n      }\n    })\n  };\n\n  const joinRoom = (e) => {\n    e.preventDefault();\n    const id = e.target.id;\n    const ids = {userId, id};\n    chatroom.emit('joinRoom', ids, (res) => {\n      console.log(res);\n      setRoomId([res.roomId]);\n      setMessages(res.messages);\n    });\n  };\n  \n  const sendMessage = (e) => {\n    e.preventDefault();\n    const datas = {message, userId, roomId};\n    chatroom.emit('sendMessage', datas, (res) => {\n      console.log(\"Sended Message\");\n      console.log(res);\n      setMessage('');\n    });\n  };\n  \n  return (\n    <StyledApp>\n      {!isOnline && (\n        <Signin \n          signin={signin}\n          setUsername={setUsername}\n          setPassword={setPassword}\n        />\n      )}\n      {alert && (\n        <Alert\n          message={alertMessage}\n          setAlert={setAlert}\n        />\n      )}\n      {isOnline && (\n        <>\n        <StyledButton onClick={e => signout(e)}>Signout</StyledButton>\n        <Contact onlineUsers={onlineUsers} joinRoom={joinRoom}/>\n        </>\n      )}\n      {roomId && (\n        roomId.map(room => (\n          <Room\n            message={message}\n            messages={messages}\n            userId={userId}\n            sendMessage={sendMessage}\n            setMessage={setMessage}\n            roomId={room}\n        />\n        ))\n      )}\n    </StyledApp>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useRef } from 'react';\n\n// IMPORT STYLED COMPONENTS\nimport { StyledRoom, StyledMessageArea, StyledMessageCurrent, StyledInputArea, StyledTextArea, StyledSendButton, StyledMessageStranger } from './Room.styled';\n\n\nconst Room = ({ message, messages, userId, sendMessage, setMessage, roomId }) => {\n  const ref = useRef(null);\n\n  const scrollToBottom = () => {\n    console.log(\"should scroll\")\n    ref.current.scrollTo({ \n      behavior: \"smooth\",\n      top: document.getElementById('scroller').scrollHeight\n    });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n  return (\n    <StyledRoom>\n      <StyledMessageArea ref={ref} id=\"scroller\">\n        {messages.map(message => {\n          return message.room === roomId && message.author === userId ? <StyledMessageCurrent><p>{message.data}</p></StyledMessageCurrent> : \n          message.room === roomId && message.author !== userId ? <StyledMessageStranger><p>{message.data}</p></StyledMessageStranger> : null\n        })}\n      </StyledMessageArea>\n      <StyledInputArea>\n        <StyledTextArea\n          name=\"\"\n          id=\"\"\n          cols=\"20\"\n          rows=\"1\"\n          wrap=\"hard\"\n          placeholder=\"Ecrivez votre message...\"\n          value={message}\n          onKeyPress={e => e.key === \"Enter\" ? sendMessage(e) : null}\n          onChange={e => setMessage(e.target.value)}\n        />\n        <StyledSendButton onClick={e => sendMessage(e)}>Send</StyledSendButton>\n      </StyledInputArea>\n    </StyledRoom>\n  );\n};\n\nexport default Room;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}